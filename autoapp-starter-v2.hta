<html>

<head>

<title>auto-app-starter v1</title>

<HTA:APPLICATION
  APPLICATIONNAME="Auto-appstarter-v1"
  VERSION="1"
  CONTEXTMENU="yes"/>

<script language=JScript>
//last update: 27 september 2014 @ 8:57pm
    //i think i figured this out:
    // each time setTimeout is executed a timer is started
    // so if three setTimeouts are called in a row all three are executed immediately and
    // are running in tandom witch each other
    // thus two function calls with 3000 ms each are three seeprate countdown timers
    // running at once and all three things will execute at the exact same time
    // MSDN language reference for setTimeout: 
    //http://msdn.microsoft.com/en-us/library/ie/ms536753(v=vs.85).aspx

    // i was going to try something with setInterval instead and was looking at the sample source
    // of 
    //http://samples.msdn.microsoft.com/workshop/samples/author/dhtml/refs/setInterval.htm
    // when i noted the new Date and getSeconds off the date object and thought maybe
    // i could use that as a way to calculate how much time to wait
    // or take the prior number of seconds and add it to the next 
    //i.e. if IE is 3 seconds and steam is 5 then since both timers start at once 
    // steam would be "IE's time plus 5 seconds"
    //not yet sure how to track that.


    // global variables

//var WshShell = new ActiveXObject("WScript.Shell");

///var sIEPath = "\"C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe\"";
//var sSteamPath = "\"P:\\Program Files (x86)\\Steam\\Steam.exe\"";
    /*
    function fnStartInterval() {
        var fnTrueFalse = function () {
            alert(iVarTImer);
        }

        
        var iVarTImer = setTimeout(function fnPlacHolder(){  } , 5000);

       //    if (iVarTImer == 5) {
               
      //     }
    }
    */

/*
function fnPauseTimeABit() {
    if (oInterval == "") {
        oTimer.innerHTML = "Interval Started";
        oInterval = window.setInterval("fnRecycle()", 5000);
    } else {
        fnStopInterval();
    }
}
*/


    /*
var sWriteToInner = function () {
    if (oInterval == "") {
        oTimer.innerHTML += "</br>alert 1 or whatever</br>";
        oInterval = false;

    } else {
        oInterval = window.clearInterval(oInterval);
    }
}

*/
    /*
    var oInterval = true;

    function fnGenericDisplay() {
        oTimer.innerHTML += "</br>Hello pass 1</br>";
      //  oTimer.innerHTML = "</br>Hello pass 1</br>";

    }

function fnPauseTimeABit() {
    var fnPlacerHolder = function () {
        //return alert("Times up");
        oInterval = false;
        return oInterval;
    }
    //oInterval = window.setInterval(fnPlacerHolder, 5000);
    window.setTimeout(fnPlacerHolder, 5000);
   // alert(oInterval);
    // oInterval = "";
    
    if (fnPlacerHolder) {
      //  window.clearInterval(oInterval);
        alert(oInterval);
    } else {
        alert("time is up");
    }
 //   return;
    
}

    */

    // maybe two arrays: one for the app paths, the other for number of seconds
    // then increment through both at the same time
    // each element associated with the other
    //e.g. arappapaths[1] the same as the secondstracker[1] element?
  //  for (var i = 0; i < arAppPaths.length; i++) {
 //       alert("value of app paths array element is " + arAppPaths[i] + " and length is " + arAppPaths.length);
 //   }
        // alert(arAppPaths[0]);
//        if (iNumSec < 60) {
//            var iConverSeconds = iNumSec * 1000;
//        }
    //  var sSecondsApp1 = iConverSeconds;
    //  var sSecondsApp2 = sSecondsApp1 + 4000;
                //  for (var i = 1; i < arAppPaths.length; i++) {
              //  }

//
//for (var j = 1; j < arAppTimes.length; j++) {  
//	iConvertSeconds = arAppTimes[iTime] * 1000;
       // alert("value of timeout.value is " + iTime.valueOf);
  //  }
//}
   // var numTimes = setTimeout("alert('hello')", 3000);
   // alert("value of numtimes is " + numTimes);
  //  fnRunExe(arAppPaths, 5);
//        var iConvertSeconds;

    var WshShell = new ActiveXObject("WScript.Shell");
    var sIEPath = "\"C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe\"";
    var sSteamPath = "\"P:\\Program Files (x86)\\Steam\\Steam.exe\"";
    var arAppPaths = [0, sSteamPath, sIEPath];
    var arAppTimes = [0, 3, 7];
//    var iTime;

    function fnRunExe(arAppPaths, iNumSec, iCounter) {
	alert("Inside fnRunExe, the value of iCounter is " + iCounter);
        var fnRunIt = function () {
            if (iTime < arAppPaths.length) {
                alert("Value of itime is " + iTime);

                var i = iTime;
                    oTimer.innerHTML += "</br>Just ran: </br>" + arAppPaths[i] + " with number of seconds " + iNumSec 
				+ "</br> also, counter is " + iCounter;

            }
        }
	var iCalSec = 1;
//	if (iTime > 1) {
//		iNumSec += arAppTimes[1] * 1000;
//	}

	if (iCounter > 1) {
		iTemp = arAppTimes[iCounter];
		iNumSec = iConvertSeconds((arAppTimes.length - 1) + iTemp);
		alert("value of inumsec after iCounter greater than 1 calculation is " + iNumSec);
	}


	var iTime = setTimeout(fnRunIt, iNumSec );
}

	function iConvertSeconds(i) {
		alert("value of i in the iConvertSeconds function is " + (i * 1000));
		return i * 1000;
	}

/*
	for (var j = 0; j < arAppTimes.length; j++) {
		iTotalTime += arAppTimes[j];
	}
*/

//	alert("value of iTotalTime is " + iTotalTime);
for (var i = 1; i < arAppPaths.length; i++) {

    fnRunExe(arAppPaths, iConvertSeconds(arAppTimes[i]), i );
}

//	iConvertSeconds = arAppTimes[i] * 1000;

//	alert("Value of arAppTimes[i] is " + iConvertSeconds);

    //fnRunExe(sIEPath, 5);
   // fnRunExe(sSteamPath, 10);
//function fnDisplaySome() {
  //  fnGenericDisplay();
//    fnPauseTimeABit();
  //  fnGenericDisplay();
//}

    /*
function fnStopInterval() {
    if (oInterval != "") {
        window.clearInterval(oInterval);
        oInterval = "";
        oTimer.innerHTML = "Interval Stopped";
    }
}
    */
    /*
function fnRecycle() {
    var oDate = new Date();
    var sSwitch = "am";
    var iHours = oDate.getHours();
    if (iHours > 12) {
        iHours -= 12;
        sSwitch = "pm";
    }
    var sMinutes = oDate.getMinutes() + "";
    if (sMinutes.length == 1) {
        sMinutes = "0" + sMinutes;
    }
    var sSeconds = oDate.getSeconds() + "";
    if (sSeconds.length == 1) {
        sSeconds = "0" + sSeconds;
    }
    oTimer.innerHTML = iHours + ":" + sMinutes + ":" + sSeconds + " " + sSwitch;
}


    
    */

    


    /* ************************************************************************************** 

    
var oInterval = "";

function fnStartInterval() {
    if (oInterval == "") {
        oTimer.innerHTML = "Interval Started";
        oInterval = window.setInterval("fnRecycle()", 1000);
    }
    else {
        fnStopInterval();
    }
}

function fnStopInterval() {
    if (oInterval != "") {
        window.clearInterval(oInterval);
        oInterval = "";
        oTimer.innerHTML = "Interval Stopped";
    }
}

function fnRecycle() {
    var oDate = new Date();
    var sSwitch = "am";
    var iHours = oDate.getHours();
    if (iHours > 12) {
        iHours -= 12;
        sSwitch = "pm";
    }
    var sMinutes = oDate.getMinutes() + "";
    if (sMinutes.length == 1) {
        sMinutes = "0" + sMinutes;
    }
    var sSeconds = oDate.getSeconds() + "";
    if (sSeconds.length == 1) {
        sSeconds = "0" + sSeconds;
    }
    oTimer.innerHTML = iHours + ":" + sMinutes + ":" + sSeconds + " " + sSwitch;
}
    
     ************************************************************************************** */



//setTimeout('alert("app path is " + sIEPath)', 3000);
//setTimeout('var i = function (){ return 0}', 3000);
//setTimeout('alert("app path is " + sSteamPath)', 3000);

//setTimeout('WshShell.Run(sIEPath)', 3000);

//var iseconds = 0;

//var oNowTime = new Date();

//var iCurrentSec = oNowTime.getSeconds();

//alert('the value is ' + iCurrentSec );

//var iFutureTime = iCurrentSec + 10;
//alert("futuretime is " + iFutureTime);

//for (var iCurrentSec = oNowTime.getSeconds(); i < 10; i++) {
//    alert("futuretime is " + iFutureTime);
//}

//var iWhileSec = iCurrentSec + 10;
    /*
alert("outside while loop, whilesec is " + iWhileSec);


for (var i = 0; i < 10; i++) {

}

*/

/*
while ( iCurrentSec <  iWhileSec) {
    alert("inside while loop, value of iWhileSec is " + iWhileSec);
     iWhileSec = oNowTime.getSeconds();
}
*/


//function fnRunApps(sAppPath, numSeconds) {




   // var runApp = function () { WshShell.Run(sAppPath); }

   // setTimeout(runApp, numSeconds);
    //alert(sAppPath);
    //setTimeout("WshShell.Run(sAppPath)", 3000);
//    setTimeout('alert("app path is " + sAppPath + " and seconds is " + numSeconds)', numSeconds);
//    alert("app path is " + sAppPath + " and seconds is " + numSeconds);
    //alert("Ran through loop for " + sAppPath + " ");

//}


    // this is copy/pasted from MS sample page for timeout, 
    //note the enclosing/escaped quotes
    //window.setTimeout("alert(\"Hello, world\")", 5000);

//fnRunApps(sIEPath, 5000);
//fnRunApps(sSteamPath, 10000);


    /*
document.write("Executing application list...</br>");

var iRunIE = function () {
    document.write("Executing IE...</br>");

    var strCommand1 = "\"C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe\"";
    WshShell.Run(strCommand1);
};
var RunSteam = function () {
    document.write("Executing Steam...</br>");

    var strCommand2 = "\"P:\\Program Files (x86)\\Steam\\Steam.exe\""
    WshShell.Run(strCommand2);
};
var RunAppsArr = [ iRunIE, RunSteam];

//var i = 0;

for (var i = 0; i < RunAppsArr.length; i++) {
    //setInterval(RunAppsArr[i], 1000);
    setTimeout(RunAppsArr[i], 1000);
    alert("Ran the thing at array element " + RunAppsArr[i]);
    //clearInterval();
}

    */
    /*
while (i < RunAppsArr.length) {
    setInterval(RunAppsArr[i], 5000);
    i++;
    if (i === (RunAppsArr.length - 1)) {
        clearInterval
    }
}
    */
//setTimeout(RunSteam, 5000);
//setTimeout(iRunIE, 5000);
//note: wscript.sleep does not work in HTAs

// this doesn't work so commenting it out
//iSleeperTime();

//setInterval( if (1 > 0) {},500);
//setInterval( function() {if (1 > 0) {} },5000);

//i don't think this was working, so i'm trying a different method
//setTimeout( fnFunctionThatReturns(),5000);

//document.write("Executing outlook...</br>");

//enable this for work
    //var strCommand2 = "\"C:\\Program Files (x86)\\Microsoft Office\\Office12\\OUTLOOK.EXE\"";

//WshShell.Run(strCommand2);

// doesn't work, commenting
/*
function iSleeperTime( iSeconds ) {

}
*/ 

</script>


</head>


    <div class="body">
	<h1>setInterval Method Sample</h1>

	<span id="oTimer" style="font-size: 16pt; font-weight: bold; font-family: Times; color: #0000FF;">
	Interval Stopped</span>
	<p><input type="button" value="Start Interval" onclick="fnStartInterval()">
	<input type="button" value="Run Exe" onclick="fnRunExe(sIEPath,4)">
	<!-- START_PAGE_FOOTER --><br>
	<br>
	<br>
	</p>
    </div>



</html>
